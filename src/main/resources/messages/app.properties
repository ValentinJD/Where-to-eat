app.title=Голосование за рестораны
app.home=Главная
app.footer=Диплом <a href="https://github.com/ValentinJD/Where-to-eat.git" target=_blank>Spring 5/JPA Enterprise (Topjava)</a> application
app.login=Войти как
app.description=Описание
app.description2=Описание приложения
app.price=Цена, руб
app.filter=Фильтровать по имени ресторана
app.profile=профиль
user.action=Действие
app.register=Регистрация
app.registered=Вы зарегистрированы. Введите ваш логин/пароль.
user.delete=Удалить
user.create=Создать
user.create.user=Создать Пользователя
user.create.admin=Создать Администратора
user.edit=Редактировать
user.id=Ид
user.title=Пользователи
user.name=Имя
user.password=Пароль
user.email=Емейл
user.roles=Роли
user.active=Активный
user.registered=Зарегистрированный
user.admin=Администратор
user.user=Пользователь
restaurant.title=Ресторан
restaurants.menu=Меню
restaurants.id=Ид ресторана
restaurants.additemmenu=Добавить пункт меню
restaurants.create=Создать новый ресторан
common.select=Выбор
common.save=Сохранить
common.cancel=Отмена
common.delete=Удалить
common.update=Редактировать
common.create=Создать
common.filter=Фильтровать
voter.count=Количество голосов
voter.against=Против
voter.for=За
voter.date=Дата голосования
voter.list=Список голосов
voter.id=Ид голоса
common.appError=Ошибка приложения
common.deleted=Запись удалена
common.saved=Запись сохранена
common.enabled=Запись активирована
common.disabled=Запись деактивирована
common.errorStatus=Статус ошибки
common.confirm=Вы уверены?
common.hello=Привет  
common.vote=Голос принят
common.search=Искать
exception.common.notFound=Не найдена запись с {0}
exception.user.modificationRestriction=Модификация Admin/User запрещена
exception.user.duplicateEmail=Пользователь с такой почтой уже есть в приложении
exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем
app.stackTitle=Стек технологий:
app.descriptionapp=Vote for the restaurant with the best food \
  <br>(Задание на дипломную работу на стажировке  https://topjava.ru/ ) \
  Разработка и реализация REST API с использованием \
  <br>в backend: Hibernate / Spring/ SpringMVC (или Spring-Boot) \
  <br>в frontend: HTML, CSS, Javascript, JQuery, AJAX, Bootstrap, \
  с регистрацией/авторизацией и правами доступа на основе ролей (USER, ADMIN). \
  <br>Администратор может создавать/редактировать/удалять рестораны и меню, а пользователи - управлять своим профилем и \
  голосовать через UI (по AJAX) и по REST интерфейсу с базовой авторизацией. \
  Возможна фильтрация ресторанов и меню по имени.\
  Весь REST интерфейс покрывается JUnit тестами, используя Spring MVC Test и Spring Security Test.
Задача такова: \
  Постройте систему голосования для принятия решения о том, где пообедать. \
  2 типа пользователей: администратор и обычные пользователи Администратор может ввести ресторан, это обеденное \
  меню дня (обычно 2-5 пунктов, просто название блюда и цена) Меню меняется каждый день \
  (администраторы делают обновления) Пользователи могут проголосовать за то, в каком ресторане они хотят пообедать \
  На одного пользователя приходится только один голос Если пользователь проголосует снова в тот же день: \
  Если это произойдет до 11: 00, мы предполагаем, что он передумал. Если это после 11: 00, то уже слишком поздно, \
  голосование не может быть изменено Каждый день в каждом ресторане предлагается новое меню.  \
  \

userTo.name=Имя
userTo.email=Почта
userTo.password=Пароль
error.appError=Ошибка приложения
error.dataNotFound=Данные не найдены
error.dataError=Ошибка в данных
error.validationError=Ошибка проверки данных
error.wrongRequest=Неверный запрос
NotEmpty=[{0}] не должно быть пустым
NotBlank=[{0}] не должно быть пустым
NotNull=[{0}] не должно быть пустым
Email=Неверный формат [{0}]
Range=[{0}] должно быть между {2} и {1}
Length=Длинна [{0}] должена быть между {2} и {1}
Size=Размер [{0}] должен быть между {2} и {1}
SafeHtml=[{0}] содержит html контент