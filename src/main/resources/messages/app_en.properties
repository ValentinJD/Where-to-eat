app.title=Votes in restaurants
app.home=Home
app.footer=Diploma <a href="https://github.com/ValentinJD/Where-to-eat.git" target=_blank>Spring 5/JPA Enterprise (Topjava)</a> application
app.login=Login as
app.description=Description
app.price=Price, rub
app.filter=Filter in name restaurant
app.profile=profile
user.action=Action
app.register=Registration
app.registered=You are registered. Please Sign in.
user.delete=Delete
user.create=Create
user.edit=Edit
user.id=Id
user.title=Users
user.name=Name
user.password=Password
user.email=Email
user.roles=Roles
user.active=Active
user.registered=Registered
user.admin=Administrator
user.user=User
restaurant.title=Restaurant
restaurants.menu=Menu
restaurants.id=Id restaurants
restaurants.additemmenu=Add item menu
restaurants.create=Create new restaurant
common.select=Select
common.save=Save
common.cancel=Cancel
common.delete=Delete
common.update=Update
common.create=Create
common.filter=Filter
voter.count=Vote count
voter.against=To vote against
voter.for=To vote for
voter.date=Date vote
voter.list=List vote
voter.id=Id vote

common.deleted=Record deleted
common.saved=Record saved
common.enabled=Record enabled
common.disabled=Record disabled
common.errorStatus=Error status
common.confirm=Are you sure?
common.hello=Hi 

app.stackTitle=Application stack:
app.descrip=<a href="https://github.com/JavaOPs/topjava">Java Enterprise project</a> with registration/authorization and role-based access rights (USER, ADMIN). \
Admin could create/edit/delete users, users - manage your profile and data (meals) via UI (AJAX) and REST with basic authorization. \
Meals could be filtered by date and time. Meal record color depends on daily calories sum exceeding "Daily calorie limit" (editable user's profile paramets). \
All REST interface covered with JUnit tests by Spring MVC Test Ð¸ Spring Security Test.


